############################
#  SHARED

broker-register-params: &broker-register-params
  CF_ORGANIZATION: ((broker-organization))
  CF_SPACE: ((broker-space))
  BROKER_NAME: ((name))
  AUTH_USER: ((broker-auth-username))
  AUTH_PASS: ((broker-auth-password))
  SERVICES: ((service-name))

cf-creds-dev: &cf-creds-dev
  CF_API_URL: ((dev-cf-api-url))
  CF_USERNAME: ((dev-cf-username))
  CF_PASSWORD: ((dev-cf-password))
  CF_ORGANIZATION: ((broker-organization))
  CF_SPACE: ((broker-space))

cf-manifest-vars: &cf-manifest-vars
  APP_NAME: ((name))
  DB_NAME: ((db_name))
  BROKER_AUTH_USERNAME: ((broker-auth-username))
  BROKER_AUTH_PASSWORD: ((broker-auth-password))
  FLASK_SECRET_KEY: ((flask-secret-key))


############################
#  JOBS

jobs:

- name: reconfigure
  plan:
  - get: src
    params: {depth: 1}
    trigger: true
  - get: secrets
    # Remember to manually trigger a new build if you upload a new version
    # of the credentials file.
    trigger: false
  - set_pipeline: ((name))
    file: src/ci/pipeline.yml
    var_files:
    - secrets/((name)).yml

- name: test
  plan:
  - get: src
    params: {depth: 1}
    trigger: true
    passed: [reconfigure]

  - put: dev-docker-image
    # We push this docker image _only_ so that we can use it in the next task
    # below.  :shrug: concourse.
    params:
      build: src
      dockerfile: src/docker/Dockerfile.dev
      tag_as_latest: true
      cache: true

  - task: test
    # Run the tests using the image pushed above.
    image: dev-docker-image
    config:
      platform: linux
      run:
        path: /app/docker/run_tests

- name: deploy-dev
  plan:
  - in_parallel:
    - get: src
      params: {depth: 1}
      trigger: true
      passed: [test]
    - get: pipeline-tasks
  - task: create-db
    file: src/ci/create-db.yml
    params:
      <<: *cf-creds-dev
      APP_NAME: ((name))
      DB_SERVICE: ((db_service))
      DB_PLAN: ((db_plan))
      DB_NAME: ((db_name))
  - task: upgrade-db
    file: src/ci/upgrade-db.yml
    params:
      <<: *cf-creds-dev
      <<: *cf-manifest-vars
      APP_NAME: ((name))-db-upgrade
  - put: cf-dev
    params:
      path: src
      manifest: src/manifest.yml
      current_app_name: ((name))
      show_app_log: true
      vars:
        <<: *cf-manifest-vars
  - task: register-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      <<: *cf-creds-dev
      <<: *broker-register-params


############################
#  RESOURCES

resources:

- name: secrets
  type: s3-iam
  icon: cloud-lock
  source:
    region_name: ((concourse-varz-bucket-region))
    bucket: ((concourse-varz-bucket))
    versioned_file: ((name)).yml

- name: src
  type: git
  icon: github-circle
  check_every: 10s
  source:
    uri: https://github.com/cloud-gov/((name))
    branch: ((git-branch))

- name: dev-docker-image
  type: docker-image
  icon: docker
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: ((docker-image-dev))

- name: cf-dev
  type: cf
  icon: cloud-upload
  source:
    api: ((dev-cf-api-url))
    username: ((dev-cf-username))
    password: ((dev-cf-password))
    organization: ((broker-organization))
    space: ((broker-space))

- name: pipeline-tasks
  type: git
  icon: github-circle
  source:
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

############################
#  RESOURCE TYPES

resource_types:

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
