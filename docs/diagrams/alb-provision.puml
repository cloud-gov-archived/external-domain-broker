@startuml
actor user
participant capi
participant broker
database "broker database" as db
participant "broker worker" as worker
participant "Lets Encrypt" as le
participant Route53
participant ALB
participant IAM

user -> capi : Create service instance
capi -> broker : Create service instance
broker -> db : get service instances by domain\n (this is to validate that the instance is unique)
broker <- db : service instances\n(this should be an empty set)
broker -> db : create service instance record
db -> broker : service instance id
broker -> db : create operation
broker <- db : operation id
broker -> capi : Create in progress as <operation id>

loop until operation state == "provisioned"
    capi -> broker : Check status of <operation id> (OSBAPI calls this "last operation")
    broker -> db : get operation for <operation id>
    db -> broker : operation
    broker -> capi : operation state\nstep description
end

broker -> worker : Queue tasks
worker -> db : update step description\n"Registering user for Lets Encrypt"
worker -> le : Create account
le -> worker : OK

worker -> db : update step description\n"Creating credentials for Lets Encrypt"
worker -> worker : generate Certificate Signing Request

worker -> db : update step description\n"Initiating Lets Encrypt challenges"
worker -> le : create certificate order
le -> worker : Challenges

worker -> db : update step description\n"Updating DNS TXT Records"
worker -> Route53 : create TXT record
worker <- Route53 : Change ID
worker -> db : update step description\n"Waiting for DNS changes"
loop until done
    worker -> Route53 : change status for Change ID
    worker <- Route53 : status
end
worker -> db : update step description\n"Answering Lets Encrypt challenges"
loop each challenge in Challenges
    worker -> le : answer challenges
    worker <- le : accepted
end

worker -> db : update step description\n"Retrieving SSL certificate from Lets Encrypt"
worker -> le : retrieve certificate
worker <- le : certificate

worker -> db : update step description\n"Uploading SSL certificate to AWS
worker -> IAM : store certificate
worker <- IAM : Server Certificate metadata

worker -> db : update step description\n"Selecting load balancer"
loop each ALB listener in configured ALB listeners
    worker -> ALB : list certificates for ALB listener
    ALB -> worker : certificates
end
worker -> worker : decide which ALB to use

worker -> db : update step description\n"Adding SSL certificate to load balancer"
worker -> ALB : Assign certificate and name to ALB
worker <- ALB : ok

worker -> db : update step description\n"Creating DNS ALIAS records"
worker -> Route53 : Create ALIAS pointing to ALB
worker <- Route53 : Change set

worker -> db : update step description\n"Waiting for DNS changes"
loop until status == done
    worker -> Route53 : change status for id
    worker <- Route53 : status
end
worker -> db : update step description\n"Complete!""
worker -> db : update operation.state\n"provisioned"

@enduml
